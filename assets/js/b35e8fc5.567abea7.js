"use strict";(self.webpackChunkvsb_subjects=self.webpackChunkvsb_subjects||[]).push([[320],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),l=p(n),m=a,f=l["".concat(c,".").concat(m)]||l[m]||d[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},762:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1,title:"Send"},i=void 0,s={unversionedId:"subjects/POS/Testy/Java/programovani/send",id:"subjects/POS/Testy/Java/programovani/send",title:"Send",description:"",source:"@site/docs/subjects/POS/Testy/Java/1_programovani/send.md",sourceDirName:"subjects/POS/Testy/Java/1_programovani",slug:"/subjects/POS/Testy/Java/programovani/send",permalink:"/vsb-informatika/docs/subjects/POS/Testy/Java/programovani/send",draft:!1,editUrl:"https://github.com/Makhuta/vsb-informatika-source/tree/main/docs/subjects/POS/Testy/Java/1_programovani/send.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Send"},sidebar:"POS",next:{title:"Receive",permalink:"/vsb-informatika/docs/subjects/POS/Testy/Java/programovani/receive"}},c={},p=[],u={toc:p},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'import java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.io.OutputStreamWriter;\nimport java.net.Socket;\n\n\npublic class MessageSender implements Runnable {\n    private static String HOSTNAME = "feib425t.vsb.cz";\n    private static int PORT = 8000;\n    private Thread thread;\n\n    public void start() {\n        thread = new Thread(this);\n        thread.start();\n    }\n\n    @Override\n    public void run() {\n        try {\n            Socket s = new Socket(HOSTNAME, PORT);\n\n            BufferedReader sis = new BufferedReader(new InputStreamReader(System.in));\n            BufferedWriter os = new BufferedWriter(new OutputStreamWriter(s.getOutputStream()));\n\n            String line;\n\n            do {\n                System.out.println("Type message to send to server.");\n\n                line=sis.readLine();\n                if(!line.startsWith("exit")) {\n                    os.write(line);\n                    os.newLine();\n                    os.flush();\n                }\n            } while (!line.equals("exit") && !line.equals("down"));\n\n            s.close();\n        } catch (IOException e) {\n            throw new RuntimeException("Unable to connect to server!", e);\n        };\n    }\n\n    public void stop() {\n        if(thread != null) {\n            thread.interrupt();\n        }\n    }\n}\n')))}d.isMDXComponent=!0}}]);